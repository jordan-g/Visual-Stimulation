<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.2.0">
  <Workflow xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:q2="clr-namespace:Bonsai.Windows.Input;assembly=Bonsai.Windows.Input" xmlns:q1="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns="https://horizongir.org/bonsai">
    <Nodes>
      <Expression xsi:type="q1:PythonTransform">
        <q1:Script>print("Importing modules.")

# import Keys
import clr
clr.AddReference("System.Windows.Forms")
from System.Windows.Forms import Keys

# import StimController
import sys
sys.path.append("C:\\Users\\guerg\\Dropbox\\Tod's Project\\Stimulation")
from controller import StimController

def load():
  # create stim controller
  global stim_controller
  stim_controller = StimController()

@returns(bool)
def process(value):
  global stim_controller
  try:
    if value == "Start" and stim_controller.running_stim == False:
      print("Starting stim.")
      stim_controller.start_stim()
    if stim_controller.running_stim:
      if value == "Stop":
        print("Stopping.")
        stim_controller.change_param("x", 0.0)
      else:
        print("Starting.")
        stim_controller.change_param("x", 1.0)
  except:
    pass

  return True

def unload():
  try:
    print("Unloading controller.")
    global stim_controller
    stim_controller.close_windows()
  except:
    pass</q1:Script>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>Start</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Condition">
        <Name>Is D Key</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="Equal">
              <Operand xsi:type="WorkflowPropertyOfKeys">
                <Value>D</Value>
              </Operand>
            </Expression>
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:KeyDown">
          <q2:Filter>None</q2:Filter>
        </Combinator>
      </Expression>
    </Nodes>
    <Edges>
      <Edge>
        <From>1</From>
        <To>0</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>2</From>
        <To>1</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>3</From>
        <To>2</To>
        <Label>Source1</Label>
      </Edge>
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.Scripting.PythonTransform, Bonsai.Scripting, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.StringProperty, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.EqualBuilder, Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.WorkflowProperty`1[[System.Windows.Forms.Keys, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], Bonsai.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Windows.Input.KeyDown, Bonsai.Windows.Input, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>